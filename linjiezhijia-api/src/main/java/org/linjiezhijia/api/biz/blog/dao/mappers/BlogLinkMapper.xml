<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linjiezhijia.api.biz.blog.dao.mappers.BlogLinkMapper">
	<resultMap id="BlogLinkResultMap" type="org.linjiezhijia.api.biz.blog.model.BlogLink">
		<result column="ID" jdbcType="INTEGER" property="id" />
		<result column="SOURCE" jdbcType="VARCHAR" property="source" />
		<result column="ADDRESS" jdbcType="VARCHAR" property="address" />
		<result column="SNAPSHOOT" jdbcType="VARCHAR" property="snapshoot" />
		<result column="CREATE_DT" jdbcType="TIMESTAMP" property="createDt" />
		<result column="UPDATE_DT" jdbcType="TIMESTAMP" property="updateDt" />
		<result column="CREATOR" jdbcType="VARCHAR" property="creator" />
		<result column="UPDATOR" jdbcType="VARCHAR" property="updator" />
		<result column="STATE" jdbcType="CHAR" property="state" />
	</resultMap>
	<sql id="Where_Clause">
		<where>
			<foreach collection="criterias" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Where_Clause">
		<where>
			<foreach collection="param.criterias" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, SOURCE, ADDRESS, SNAPSHOOT, CREATE_DT, UPDATE_DT, CREATOR, UPDATOR,
		STATE
	</sql>
	<delete id="delete" parameterType="org.linjiezhijia.api.biz.blog.dbo.BlogLinkDO">
		delete from t_blog_link
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
	</delete><select id="pageCount" parameterType="org.linjiezhijia.api.biz.blog.dbo.BlogLinkDO" resultType="java.lang.Long">
		select count(*) from t_blog_link
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
	</select><select id="pageList" parameterType="org.linjiezhijia.api.biz.blog.dbo.BlogLinkDO"
		resultMap="BlogLinkResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_blog_link
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	
	<insert id="insert" parameterType="org.linjiezhijia.api.biz.blog.model.BlogLink">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_blog_link (SOURCE, ADDRESS, SNAPSHOOT,
		CREATE_DT, UPDATE_DT, CREATOR,
		UPDATOR, STATE)
		values (#{source,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{snapshoot,jdbcType=VARCHAR},
		#{createDt,jdbcType=TIMESTAMP}, #{updateDt,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR},
		#{updator,jdbcType=VARCHAR}, #{state,jdbcType=CHAR})
	</insert>
	
	<update id="update" parameterType="map">
		update t_blog_link
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.source != null">
				SOURCE = #{record.source,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				ADDRESS = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.snapshoot != null">
				SNAPSHOOT = #{record.snapshoot,jdbcType=VARCHAR},
			</if>
			<if test="record.createDt != null">
				CREATE_DT = #{record.createDt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateDt != null">
				UPDATE_DT = #{record.updateDt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.creator != null">
				CREATOR = #{record.creator,jdbcType=VARCHAR},
			</if>
			<if test="record.updator != null">
				UPDATOR = #{record.updator,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				STATE = #{record.state,jdbcType=CHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Where_Clause" />
		</if>
	</update>
</mapper>